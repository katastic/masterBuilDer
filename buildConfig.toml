[project]
    name = "dLawn"
    profiles = ["release", "debug"]
    compilers = ["dmd", "ldc"]
    targets = ["linux", "windows"]
    
[options]
    automaticallyAddOutputExtension = true   # main for linux, main.exe for windows

[windows]
    sourcePaths = [ './src/', './toml/src/toml' ]
    recursiveSourcePaths = [ ]
    libPaths = [
        '.',
        'C:\git\dlawn\winbuilddeps\lib\', 
        'C:\git\dlawn\winbuilddeps\dallegro5', 
        'C:\git\dlawn\toml',
        'C:\git\dlawn\src'] 
    recursiveLibPaths = []
    libs = [ "toml" ]

[linux]
    sourcePaths = [ './src/', './toml/src/toml' ]
    recursiveSourcePaths = [ ]
    libPaths = [
        '.',
        'C:\git\dlawn\winbuilddeps\lib\', 
        'C:\git\dlawn\winbuilddeps\dallegro5', 
        'C:\git\dlawn\toml',
        'C:\git\dlawn\src'] 
    recursiveLibPaths = []
    libs = [ "toml" ]

[setupCode]
    getDeps = ["git submodule init", "git submodule init"]

#dmd -debug -gs -gf -g -gx -ofmain `ls ./src/*.d` `ls ./toml/src/toml/*.d` -L-L./lib/ 
#ldc2 -wi -d-debug -fsanitize=address -fsanitize-memory-track-origins=0 -fsanitize-blacklist=asanblacklist.txt --frame-pointer=all  -g --gc -stats -ofmain `ls ./src/*.d`  `ls ./toml/src/toml/*.d` -L-L/usr/local/lib/ -L-L./lib/ $@ --preview=shortenedMethods

[modeStrings]
    debug = ["-debug","-d-debug"]
    debugSymbols = ["-g", "-g"]
    debugSymbolsNonDDebuggers = ["", "-gc"]
    optimize = ["-O", "-O"]
    profile = ["-profile",""]
    release = ["-release", "--release"]
    profileGC = ["-profile=gc",""]
    haltingWarn = ["-w", "-w"]
    warn = ["-wi", "-wi"]
    setOutputFile = ["-of=", "--of="]
    inline = ["-inline", ""]
    stackStomp = ["-gx -s -gf", ""] # -gf emit debug info for all referenced types, -gs always emit stack frames, -gx stack stomp code
    other = ["", ""]
    ignoreDepreciated = ["-d", "-d"] # silently allow
    warnDepreciated = ["-dw", ""]
    errorDepreciated = ["-de", ""]
    noObjectIntermediates = ["-o-", ""] 

[release]
    name = "release"
    modesEnabled = ["optimize", "other", "ignoreDepreciated", "noObjectIntermediates"]
    extraCompilerFlags = "" # these won't be cross compiler. add your own [modeStrings] for those.
    extraLinkerFlags = ""
    outputFilename = "main" # auto add .exe for windows or change [automaticallyAddOutputExtension]
    successOnRunScript = ""
    failureOnRunScript = ""

[debug]
    name = "debug"
    modesEnabled = ["debug", "optimize", "ignoreDepreciated", "noObjectIntermediates"]
    extraCompilerFlags = "" # these won't be cross compiler. add your own [modeStrings] for those.
    extraLinkerFlags = ""
    outputFilename = "main" # auto add .exe for windows or change [automaticallyAddOutputExtension]
    successOnRunScript = ""
    failureOnRunScript = ""
